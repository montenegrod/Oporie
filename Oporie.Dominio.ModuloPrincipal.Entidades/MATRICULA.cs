//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
//     el código se vuelve a generar.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
using Capas.Dominio.Core.Entidades;

namespace Oporie.Dominio.ModuloPrincipal.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(REPRESENTANTE_LEGAL))]
    [KnownType(typeof(HORARIO))]
    [KnownType(typeof(PERIODO))]
    [KnownType(typeof(INSCRIPCION))]
    [KnownType(typeof(REQUISITOS_MATRICULA))]
    public partial class MATRICULA: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Propiedades primitivas
    
        [DataMember]
        public System.Guid ID_MATRICULA
        {
            get { return _iD_MATRICULA; }
            set
            {
                if (_iD_MATRICULA != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("La propiedad 'ID_MATRICULA' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.");
                    }
                    _iD_MATRICULA = value;
                    OnPropertyChanged("ID_MATRICULA");
                }
            }
        }
        private System.Guid _iD_MATRICULA;
    
        [DataMember]
        public System.Guid ID_INSCRIPCION
        {
            get { return _iD_INSCRIPCION; }
            set
            {
                if (_iD_INSCRIPCION != value)
                {
                    ChangeTracker.RecordOriginalValue("ID_INSCRIPCION", _iD_INSCRIPCION);
                    if (!IsDeserializing)
                    {
                        if (INSCRIPCION != null && INSCRIPCION.ID_INSCRIPCION != value)
                        {
                            INSCRIPCION = null;
                        }
                    }
                    _iD_INSCRIPCION = value;
                    OnPropertyChanged("ID_INSCRIPCION");
                }
            }
        }
        private System.Guid _iD_INSCRIPCION;
    
        [DataMember]
        public System.Guid ID_PERIODO
        {
            get { return _iD_PERIODO; }
            set
            {
                if (_iD_PERIODO != value)
                {
                    ChangeTracker.RecordOriginalValue("ID_PERIODO", _iD_PERIODO);
                    if (!IsDeserializing)
                    {
                        if (PERIODO != null && PERIODO.ID_PERIODO != value)
                        {
                            PERIODO = null;
                        }
                    }
                    _iD_PERIODO = value;
                    OnPropertyChanged("ID_PERIODO");
                }
            }
        }
        private System.Guid _iD_PERIODO;
    
        [DataMember]
        public System.Guid ID_HORARIO
        {
            get { return _iD_HORARIO; }
            set
            {
                if (_iD_HORARIO != value)
                {
                    ChangeTracker.RecordOriginalValue("ID_HORARIO", _iD_HORARIO);
                    if (!IsDeserializing)
                    {
                        if (HORARIO != null && HORARIO.ID_HORARIO != value)
                        {
                            HORARIO = null;
                        }
                    }
                    _iD_HORARIO = value;
                    OnPropertyChanged("ID_HORARIO");
                }
            }
        }
        private System.Guid _iD_HORARIO;
    
        [DataMember]
        public Nullable<System.DateTime> MAT_FECHAINGRESO
        {
            get { return _mAT_FECHAINGRESO; }
            set
            {
                if (_mAT_FECHAINGRESO != value)
                {
                    _mAT_FECHAINGRESO = value;
                    OnPropertyChanged("MAT_FECHAINGRESO");
                }
            }
        }
        private Nullable<System.DateTime> _mAT_FECHAINGRESO;
    
        [DataMember]
        public bool MAT_ESTADO
        {
            get { return _mAT_ESTADO; }
            set
            {
                if (_mAT_ESTADO != value)
                {
                    _mAT_ESTADO = value;
                    OnPropertyChanged("MAT_ESTADO");
                }
            }
        }
        private bool _mAT_ESTADO;

        #endregion
        #region Propiedades de navegación
    
        [DataMember]
        public TrackableCollection<REPRESENTANTE_LEGAL> REPRESENTANTE_LEGAL
        {
            get
            {
                if (_rEPRESENTANTE_LEGAL == null)
                {
                    _rEPRESENTANTE_LEGAL = new TrackableCollection<REPRESENTANTE_LEGAL>();
                    _rEPRESENTANTE_LEGAL.CollectionChanged += FixupREPRESENTANTE_LEGAL;
                }
                return _rEPRESENTANTE_LEGAL;
            }
            set
            {
                if (!ReferenceEquals(_rEPRESENTANTE_LEGAL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking");
                    }
                    if (_rEPRESENTANTE_LEGAL != null)
                    {
                        _rEPRESENTANTE_LEGAL.CollectionChanged -= FixupREPRESENTANTE_LEGAL;
                    }
                    _rEPRESENTANTE_LEGAL = value;
                    if (_rEPRESENTANTE_LEGAL != null)
                    {
                        _rEPRESENTANTE_LEGAL.CollectionChanged += FixupREPRESENTANTE_LEGAL;
                    }
                    OnNavigationPropertyChanged("REPRESENTANTE_LEGAL");
                }
            }
        }
        private TrackableCollection<REPRESENTANTE_LEGAL> _rEPRESENTANTE_LEGAL;
    
        [DataMember]
        public HORARIO HORARIO
        {
            get { return _hORARIO; }
            set
            {
                if (!ReferenceEquals(_hORARIO, value))
                {
                    var previousValue = _hORARIO;
                    _hORARIO = value;
                    FixupHORARIO(previousValue);
                    OnNavigationPropertyChanged("HORARIO");
                }
            }
        }
        private HORARIO _hORARIO;
    
        [DataMember]
        public PERIODO PERIODO
        {
            get { return _pERIODO; }
            set
            {
                if (!ReferenceEquals(_pERIODO, value))
                {
                    var previousValue = _pERIODO;
                    _pERIODO = value;
                    FixupPERIODO(previousValue);
                    OnNavigationPropertyChanged("PERIODO");
                }
            }
        }
        private PERIODO _pERIODO;
    
        [DataMember]
        public INSCRIPCION INSCRIPCION
        {
            get { return _iNSCRIPCION; }
            set
            {
                if (!ReferenceEquals(_iNSCRIPCION, value))
                {
                    var previousValue = _iNSCRIPCION;
                    _iNSCRIPCION = value;
                    FixupINSCRIPCION(previousValue);
                    OnNavigationPropertyChanged("INSCRIPCION");
                }
            }
        }
        private INSCRIPCION _iNSCRIPCION;
    
        [DataMember]
        public TrackableCollection<REQUISITOS_MATRICULA> REQUISITOS_MATRICULA
        {
            get
            {
                if (_rEQUISITOS_MATRICULA == null)
                {
                    _rEQUISITOS_MATRICULA = new TrackableCollection<REQUISITOS_MATRICULA>();
                    _rEQUISITOS_MATRICULA.CollectionChanged += FixupREQUISITOS_MATRICULA;
                }
                return _rEQUISITOS_MATRICULA;
            }
            set
            {
                if (!ReferenceEquals(_rEQUISITOS_MATRICULA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking");
                    }
                    if (_rEQUISITOS_MATRICULA != null)
                    {
                        _rEQUISITOS_MATRICULA.CollectionChanged -= FixupREQUISITOS_MATRICULA;
                    }
                    _rEQUISITOS_MATRICULA = value;
                    if (_rEQUISITOS_MATRICULA != null)
                    {
                        _rEQUISITOS_MATRICULA.CollectionChanged += FixupREQUISITOS_MATRICULA;
                    }
                    OnNavigationPropertyChanged("REQUISITOS_MATRICULA");
                }
            }
        }
        private TrackableCollection<REQUISITOS_MATRICULA> _rEQUISITOS_MATRICULA;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            REPRESENTANTE_LEGAL.Clear();
            HORARIO = null;
            PERIODO = null;
            INSCRIPCION = null;
            REQUISITOS_MATRICULA.Clear();
        }

        #endregion
        #region Corrección de asociación
    
        private void FixupHORARIO(HORARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MATRICULA.Contains(this))
            {
                previousValue.MATRICULA.Remove(this);
            }
    
            if (HORARIO != null)
            {
                if (!HORARIO.MATRICULA.Contains(this))
                {
                    HORARIO.MATRICULA.Add(this);
                }
    
                ID_HORARIO = HORARIO.ID_HORARIO;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("HORARIO")
                    && (ChangeTracker.OriginalValues["HORARIO"] == HORARIO))
                {
                    ChangeTracker.OriginalValues.Remove("HORARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("HORARIO", previousValue);
                }
                if (HORARIO != null && !HORARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    HORARIO.StartTracking();
                }
            }
        }
    
        private void FixupPERIODO(PERIODO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MATRICULA.Contains(this))
            {
                previousValue.MATRICULA.Remove(this);
            }
    
            if (PERIODO != null)
            {
                if (!PERIODO.MATRICULA.Contains(this))
                {
                    PERIODO.MATRICULA.Add(this);
                }
    
                ID_PERIODO = PERIODO.ID_PERIODO;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("PERIODO")
                    && (ChangeTracker.OriginalValues["PERIODO"] == PERIODO))
                {
                    ChangeTracker.OriginalValues.Remove("PERIODO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("PERIODO", previousValue);
                }
                if (PERIODO != null && !PERIODO.ChangeTracker.ChangeTrackingEnabled)
                {
                    PERIODO.StartTracking();
                }
            }
        }
    
        private void FixupINSCRIPCION(INSCRIPCION previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MATRICULA.Contains(this))
            {
                previousValue.MATRICULA.Remove(this);
            }
    
            if (INSCRIPCION != null)
            {
                if (!INSCRIPCION.MATRICULA.Contains(this))
                {
                    INSCRIPCION.MATRICULA.Add(this);
                }
    
                ID_INSCRIPCION = INSCRIPCION.ID_INSCRIPCION;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("INSCRIPCION")
                    && (ChangeTracker.OriginalValues["INSCRIPCION"] == INSCRIPCION))
                {
                    ChangeTracker.OriginalValues.Remove("INSCRIPCION");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("INSCRIPCION", previousValue);
                }
                if (INSCRIPCION != null && !INSCRIPCION.ChangeTracker.ChangeTrackingEnabled)
                {
                    INSCRIPCION.StartTracking();
                }
            }
        }
    
        private void FixupREPRESENTANTE_LEGAL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (REPRESENTANTE_LEGAL item in e.NewItems)
                {
                    item.MATRICULA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("REPRESENTANTE_LEGAL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (REPRESENTANTE_LEGAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.MATRICULA, this))
                    {
                        item.MATRICULA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("REPRESENTANTE_LEGAL", item);
                    }
                }
            }
        }
    
        private void FixupREQUISITOS_MATRICULA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (REQUISITOS_MATRICULA item in e.NewItems)
                {
                    item.MATRICULA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("REQUISITOS_MATRICULA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (REQUISITOS_MATRICULA item in e.OldItems)
                {
                    if (ReferenceEquals(item.MATRICULA, this))
                    {
                        item.MATRICULA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("REQUISITOS_MATRICULA", item);
                    }
                }
            }
        }

        #endregion
    }
}
