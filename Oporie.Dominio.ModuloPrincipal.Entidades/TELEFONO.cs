//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
//     el código se vuelve a generar.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
using Capas.Dominio.Core.Entidades;

namespace Oporie.Dominio.ModuloPrincipal.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(ALUMNO))]
    [KnownType(typeof(PERSONA))]
    [KnownType(typeof(REPRESENTANTE_LEGAL))]
    [KnownType(typeof(REFERENCIA))]
    public partial class TELEFONO: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Propiedades primitivas
    
        [DataMember]
        public System.Guid ID_TELEFONO
        {
            get { return _iD_TELEFONO; }
            set
            {
                if (_iD_TELEFONO != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("La propiedad 'ID_TELEFONO' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.");
                    }
                    _iD_TELEFONO = value;
                    OnPropertyChanged("ID_TELEFONO");
                }
            }
        }
        private System.Guid _iD_TELEFONO;
    
        [DataMember]
        public string TEL_NUMERO
        {
            get { return _tEL_NUMERO; }
            set
            {
                if (_tEL_NUMERO != value)
                {
                    _tEL_NUMERO = value;
                    OnPropertyChanged("TEL_NUMERO");
                }
            }
        }
        private string _tEL_NUMERO;
    
        [DataMember]
        public bool TEL_ESTADO
        {
            get { return _tEL_ESTADO; }
            set
            {
                if (_tEL_ESTADO != value)
                {
                    _tEL_ESTADO = value;
                    OnPropertyChanged("TEL_ESTADO");
                }
            }
        }
        private bool _tEL_ESTADO;

        #endregion
        #region Propiedades de navegación
    
        [DataMember]
        public TrackableCollection<ALUMNO> ALUMNO
        {
            get
            {
                if (_aLUMNO == null)
                {
                    _aLUMNO = new TrackableCollection<ALUMNO>();
                    _aLUMNO.CollectionChanged += FixupALUMNO;
                }
                return _aLUMNO;
            }
            set
            {
                if (!ReferenceEquals(_aLUMNO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking");
                    }
                    if (_aLUMNO != null)
                    {
                        _aLUMNO.CollectionChanged -= FixupALUMNO;
                    }
                    _aLUMNO = value;
                    if (_aLUMNO != null)
                    {
                        _aLUMNO.CollectionChanged += FixupALUMNO;
                    }
                    OnNavigationPropertyChanged("ALUMNO");
                }
            }
        }
        private TrackableCollection<ALUMNO> _aLUMNO;
    
        [DataMember]
        public TrackableCollection<PERSONA> PERSONA
        {
            get
            {
                if (_pERSONA == null)
                {
                    _pERSONA = new TrackableCollection<PERSONA>();
                    _pERSONA.CollectionChanged += FixupPERSONA;
                }
                return _pERSONA;
            }
            set
            {
                if (!ReferenceEquals(_pERSONA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking");
                    }
                    if (_pERSONA != null)
                    {
                        _pERSONA.CollectionChanged -= FixupPERSONA;
                    }
                    _pERSONA = value;
                    if (_pERSONA != null)
                    {
                        _pERSONA.CollectionChanged += FixupPERSONA;
                    }
                    OnNavigationPropertyChanged("PERSONA");
                }
            }
        }
        private TrackableCollection<PERSONA> _pERSONA;
    
        [DataMember]
        public TrackableCollection<REPRESENTANTE_LEGAL> REPRESENTANTE_LEGAL
        {
            get
            {
                if (_rEPRESENTANTE_LEGAL == null)
                {
                    _rEPRESENTANTE_LEGAL = new TrackableCollection<REPRESENTANTE_LEGAL>();
                    _rEPRESENTANTE_LEGAL.CollectionChanged += FixupREPRESENTANTE_LEGAL;
                }
                return _rEPRESENTANTE_LEGAL;
            }
            set
            {
                if (!ReferenceEquals(_rEPRESENTANTE_LEGAL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking");
                    }
                    if (_rEPRESENTANTE_LEGAL != null)
                    {
                        _rEPRESENTANTE_LEGAL.CollectionChanged -= FixupREPRESENTANTE_LEGAL;
                    }
                    _rEPRESENTANTE_LEGAL = value;
                    if (_rEPRESENTANTE_LEGAL != null)
                    {
                        _rEPRESENTANTE_LEGAL.CollectionChanged += FixupREPRESENTANTE_LEGAL;
                    }
                    OnNavigationPropertyChanged("REPRESENTANTE_LEGAL");
                }
            }
        }
        private TrackableCollection<REPRESENTANTE_LEGAL> _rEPRESENTANTE_LEGAL;
    
        [DataMember]
        public TrackableCollection<REFERENCIA> REFERENCIA
        {
            get
            {
                if (_rEFERENCIA == null)
                {
                    _rEFERENCIA = new TrackableCollection<REFERENCIA>();
                    _rEFERENCIA.CollectionChanged += FixupREFERENCIA;
                }
                return _rEFERENCIA;
            }
            set
            {
                if (!ReferenceEquals(_rEFERENCIA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking");
                    }
                    if (_rEFERENCIA != null)
                    {
                        _rEFERENCIA.CollectionChanged -= FixupREFERENCIA;
                    }
                    _rEFERENCIA = value;
                    if (_rEFERENCIA != null)
                    {
                        _rEFERENCIA.CollectionChanged += FixupREFERENCIA;
                    }
                    OnNavigationPropertyChanged("REFERENCIA");
                }
            }
        }
        private TrackableCollection<REFERENCIA> _rEFERENCIA;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            ALUMNO.Clear();
            PERSONA.Clear();
            REPRESENTANTE_LEGAL.Clear();
            REFERENCIA.Clear();
        }

        #endregion
        #region Corrección de asociación
    
        private void FixupALUMNO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ALUMNO item in e.NewItems)
                {
                    item.TELEFONO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ALUMNO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ALUMNO item in e.OldItems)
                {
                    if (ReferenceEquals(item.TELEFONO, this))
                    {
                        item.TELEFONO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ALUMNO", item);
                    }
                }
            }
        }
    
        private void FixupPERSONA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PERSONA item in e.NewItems)
                {
                    item.TELEFONO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PERSONA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PERSONA item in e.OldItems)
                {
                    if (ReferenceEquals(item.TELEFONO, this))
                    {
                        item.TELEFONO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PERSONA", item);
                    }
                }
            }
        }
    
        private void FixupREPRESENTANTE_LEGAL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (REPRESENTANTE_LEGAL item in e.NewItems)
                {
                    item.TELEFONO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("REPRESENTANTE_LEGAL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (REPRESENTANTE_LEGAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.TELEFONO, this))
                    {
                        item.TELEFONO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("REPRESENTANTE_LEGAL", item);
                    }
                }
            }
        }
    
        private void FixupREFERENCIA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (REFERENCIA item in e.NewItems)
                {
                    item.TELEFONO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("REFERENCIA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (REFERENCIA item in e.OldItems)
                {
                    if (ReferenceEquals(item.TELEFONO, this))
                    {
                        item.TELEFONO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("REFERENCIA", item);
                    }
                }
            }
        }

        #endregion
    }
}
